--- dwm/dwm.c	2023-05-09 23:57:20.799802224 -0500
+++ dwm/dwm.c	2023-05-09 23:59:15.739751165 -0500
@@ -254,6 +254,7 @@
 static void updatenumlockmask(void);
 static void updatesizehints(Client *c);
 static void updatestatus(void);
+static void updaterules(Client *c);
 static void updatetitle(Client *c);
 static void updatewindowtype(Client *c);
 static void updatewmhints(Client *c);
@@ -1335,8 +1336,10 @@
 			drawbars();
 			break;
 		}
-		if (ev->atom == XA_WM_NAME || ev->atom == netatom[NetWMName])
+		if (ev->atom == XA_WM_NAME || ev->atom == netatom[NetWMName]) {
 			updatetitle(c);
+			updaterules(c);
+		}
 		if (ev->atom == netatom[NetWMWindowType])
 			updatewindowtype(c);
 		if (ev->atom == motifatom)
@@ -2380,6 +2383,54 @@
 }
 
 void
+updaterules(Client *c)
+{
+    //applyrules(c)
+	const char *class, *instance;
+	unsigned int i;
+	const Rule *r;
+	Monitor *m;
+	XClassHint ch = { NULL, NULL };
+
+	/* rule matching */
+	XGetClassHint(dpy, c->win, &ch);
+	class    = ch.res_class ? ch.res_class : broken;
+	instance = ch.res_name  ? ch.res_name  : broken;
+    char found_rule = 0;
+
+	for (i = 0; i < LENGTH(rules); i++) {
+		r = &rules[i];
+		if ((!r->title || strstr(c->name, r->title))
+		&& (!r->class || strstr(class, r->class))
+		&& (!r->instance || strstr(instance, r->instance)))
+		{
+			c->isfloating = r->isfloating;
+
+            if(!found_rule)
+            {
+                c->tags=0;
+			    found_rule=1;
+            }    
+            c->tags |= r->tags;
+            for (m = mons; m && m->num != r->monitor; m = m->next);
+			if (m)
+				c->mon = m;
+		}
+	}
+	if (ch.res_class)
+		XFree(ch.res_class);
+	if (ch.res_name)
+		XFree(ch.res_name);
+	c->tags = c->tags & TAGMASK ? c->tags & TAGMASK : c->mon->tagset[c->mon->seltags];
+
+    // end apply rules
+	if (c->isfloating)
+		resize(c, c->x, c->y,
+			c->w, c->h, 0);
+	arrange(c->mon);
+}
+
+void
 updatetitle(Client *c)
 {
 	if (!gettextprop(c->win, netatom[NetWMName], c->name, sizeof c->name))
